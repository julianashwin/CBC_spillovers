require(rstan)
install.packages("rstan", repos = "https://cloud.r-project.org/", dependencies = TRUE)
require(rstan)
setwd("~/Documents/DPhil/Raw_Data/Inquirer")
rm(list=ls())
require(ggplot2)
raw.df <- read.csv("inquireraugmented.csv", encoding = "utf-8", stringsAsFactors = FALSE)
View(raw.df)
setwd("~/Documents/DPhil/Raw_Data/Inquirer")
rm(list=ls())
require(ggplot2)
raw.df <- read.csv("inquireraugmented.csv", encoding = "utf-8", stringsAsFactors = FALSE)
all_words <- raw.df$Entry
?lower
require(stringr)
tolower
all_words <- tolower(all_words)
all_words
str_locate_all(all_words, "#[0-9]+")
all_words <- str_remove_all(all_words, "#[0-9]+")
all_words
raw.df$Negativ
negative_words<- (raw.df$Negativ=="Negativ")
negative_words<- all_words[which(raw.df$Negativ=="Negativ")]
negative_words
raw.df$Positiv
positive_words <-all_words[which(raw.df$Positiv=="Positiv")]
positive_words
positive_words[1001:end]
positive_words[1001:]
positive_words[1001:1915]
pleasure_words <-all_words[which(raw.df$Pleasur=="Pleasur")]
pain_words <-all_words[which(raw.df$Pain=="Pain")]
clean.df<- as.data.frame(matrix(NA, nrows=length(negative_words), ncols =4))
clean.df<- as.data.frame(matrix(NA, nrow=length(negative_words), ncol =4))
colnames(clean.df) <- c("Negative", "Positive", "Pleasure","Pain")
clean.df$Negative[1:length(negative_words)] <- negative_words
clean.df$Negative[1:length(positive_words)] <- positive_words
clean.df$Negative[1:length(pleasure_words)] <- pleasure_words
clean.df$Negative[1:length(pain_words)] <- pain_words
write.csv(clean.df,"~/Documents/DPhil/Clean_Data/Dictionaries/inquirer.csv",
row.names = FALSE)
clean.df<- as.data.frame(matrix(NA, nrow=length(negative_words), ncol =4))
colnames(clean.df) <- c("Negative", "Positive", "Pleasure","Pain")
clean.df$Negative[1:length(negative_words)] <- negative_words
clean.df$Positive[1:length(positive_words)] <- positive_words
clean.df$Pleasure[1:length(pleasure_words)] <- pleasure_words
clean.df$Pain[1:length(pain_words)] <- pain_words
write.csv(clean.df,"~/Documents/DPhil/Clean_Data/Dictionaries/inquirer.csv",
row.names = FALSE)
setwd("~/Documents/GitHub/CBC_spillovers")
rm(list = ls())
require(stringr)
require(tm)
require(slam)
require(topicmodels)
require(tidyverse)
require(tidytext)
require(wordcloud)
require(lubridate)
### Define the directories where raw data is stored and clean will be saved
clean_dir <- "~/Documents/DPhil/Clean_Data/"
export_dir <- "~/Documents/DPhil/central_bank_communication/figures/"
# Import the text data
clean_filename = paste(clean_dir, "CBC/fedminutes_long_clean.csv", sep = "/")
fedminutes.df <- read.csv(clean_filename, encoding = "utf-8", stringsAsFactors = FALSE)
get_sentiments("loughran")
install.packages("textdata")
get_sentiments("loughran")
install.packages("textdata")
require(texdata)
install.packages("textdata")
get_sentiments("loughran")
get_sentiments("nrc")
install.packages("textdata")
get_sentiments("loughran")
install.packages(c("backports", "bayesplot", "boot", "callr", "car", "carData", "class", "cli", "cowplot", "crosstalk", "data.table", "digest", "dplyr", "dreamerr", "DT", "ellipsis", "extraDistr", "fixest", "forcats", "foreach", "fs", "gets", "ggplot2", "ggpubr", "ggrepel", "git2r", "glmnet", "glue", "gtools", "haven", "htmltools", "httpuv", "httr", "igraph", "inline", "ISOcodes", "jsonlite", "KernSmooth", "knitr", "later", "lattice", "lfe", "lme4", "lmtest", "loo", "lubridate", "maptools", "MASS", "matrixStats", "maxLik", "MCMCpack", "mgcv", "modeltools", "nlme", "nnet", "openssl", "openxlsx", "pillar", "pkgbuild", "plm", "processx", "promises", "ps", "purrr", "quantreg", "Rcpp", "RcppArmadillo", "RcppParallel", "Rdpack", "readODS", "remotes", "reshape2", "rmarkdown", "rstan", "rstantools", "rstudioapi", "scales", "shiny", "shinyjs", "SnowballC", "sp", "spatial", "StanHeaders", "stopwords", "stringi", "survival", "sys", "tidyr", "tidyselect", "tidytext", "tinytex", "topicmodels", "usethis", "V8", "withr", "xfun", "xml2", "xts", "zip", "zoo"))
