require(rstan)
install.packages("rstan", repos = "https://cloud.r-project.org/", dependencies = TRUE)
require(rstan)
install.packages("tranlateR")
install.packages("RSelenium")
install.packages("rvest")
install.packages("tidyverse")
install.packages("RSelenium")
install.packages("rvest")
require(RSelenium)
require(rvest)
require(tidyverse)
rD <- rsDriver(browser="firefox", port=4545L, verbose=F)
remDr <- rD[["client"]]
remDr$navigate("https://www.fcc.gov/media/engineering/dtvmaps")
zip <- "30308"
remDr$findElement(using = "id", value = "startpoint")$sendKeysToElement(list(zip))
remDr$findElements("id", "btnSub")[[1]]$clickElement()
remDr$findElements("id", "btnSub")[[1]]$clickElement()
remDr$findElements("id", "btnSub")[[1]]$clickElement()
exp(-10)
exp(5)
exp(1)
exp(0.5)
exp(0)
exp(0.0001)
exp(-1)
exp(-10)
exp(-10+1)
exp(-10-1)
log(0.000123)
log(0.1)
log(0.01)
log(0.001)
log(0.00001)
####
# This file combines SPF-topic panel with Fed greenbook forecasts where available
####
setwd("~/Documents/GitHub/CBC_spillovers")
rm(list = ls())
require(stringr)
require(tm)
require(slam)
require(topicmodels)
require(tidyverse)
require(tidytext)
require(wordcloud)
require(plm)
require(lfe)
require(stargazer)
require(readxl)
require(openxlsx)
require(lubridate)
require(zoo)
require(dplyr)
####
# This file combines SPF-topic panel with Fed greenbook forecasts where available
####
setwd("~/Documents/GitHub/CBC_spillovers")
rm(list = ls())
require(stringr)
require(tm)
require(slam)
require(topicmodels)
require(tidyverse)
require(tidytext)
require(wordcloud)
require(plm)
require(lfe)
require(stargazer)
require(readxl)
require(openxlsx)
require(lubridate)
require(zoo)
require(dplyr)
clean_dir <- "data/"
export_dir <- "figures/"
import_filename = paste(clean_dir, "topics_forecasts_panel.csv", sep = "/")
panel_df <- read.csv(import_filename, stringsAsFactors = FALSE)
spf2gb_df <- data.frame(series = unique(panel_df$series))
spf2gb_df$GB_series <- NA
spf2gb_df$GB_series[which(spf2gb_df$series == "NGDP")] <- "gNGDP"
spf2gb_df$GB_series[which(spf2gb_df$series == "RGDP")] <- "gRGDP"
spf2gb_df$GB_series[which(spf2gb_df$series == "CPI")] <- "gPCPI"
spf2gb_df$GB_series[which(spf2gb_df$series == "UNEMP")] <- "UNEMP"
spf2gb_df$GB_series[which(spf2gb_df$series == "INDPROD")] <- "gIP"
spf2gb_df$GB_series[which(spf2gb_df$series == "HOUSING")] <- "HSTART"
spf2gb_df$GB_series[which(spf2gb_df$series == "RRESINV")] <- "gRRES"
spf2gb_df$GB_series[which(spf2gb_df$series == "RNRESINV")] <- "gRBF"
spf2gb_df$GB_series[which(spf2gb_df$series == "RFEDGOV")] <- "gRGOVF"
spf2gb_df$GB_series[which(spf2gb_df$series == "RSLGOV")] <- "gRGOVSL"
c(2,2,1,1,2,2,2,2,2,2)
length(c(2,2,1,1,2,2,2,2,2,2))
spf2gb_df <- data.frame(series = unique(panel_df$series))
spf2gb_df$GB_series <- NA
spf2gb_df$version <- NA
spf2gb_df[which(spf2gb_df$series == "NGDP"), c("GB_series", "version")] <- c("gNGDP",2)
spf2gb_df[which(spf2gb_df$series == "RGDP"), c("GB_series", "version")] <- c("gRGDP",2)
spf2gb_df[which(spf2gb_df$series == "CPI"), c("GB_series", "version")] <- c("gPCPI",1)
spf2gb_df[which(spf2gb_df$series == "UNEMP"), c("GB_series", "version")] <- c("UNEMP",1)
spf2gb_df[which(spf2gb_df$series == "INDPROD"), c("GB_series", "version")] <- c("gIP",2)
spf2gb_df[which(spf2gb_df$series == "HOUSING"), c("GB_series", "version")] <- c("HSTART",2)
spf2gb_df[which(spf2gb_df$series == "RRESINV"), c("GB_series", "version")] <- c("gRRES",2)
spf2gb_df[which(spf2gb_df$series == "RNRESINV"), c("GB_series", "version")] <- c("gRBF",2)
spf2gb_df[which(spf2gb_df$series == "RFEDGOV"), c("GB_series", "version")] <- c("gRGOVF",2)
spf2gb_df[which(spf2gb_df$series == "RSLGOV"), c("GB_series", "version")] <- c("gRGOVSL",2)
View(spf2gb_df)
for (ii in 1:nrow(spf2gb_df)){
GB_sheet <- spf2gb_df$GB_series[ii]
if (!is.na(spf2gb_df$GB_series[ii])){
print(GB_sheet)
}
}
