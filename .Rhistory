sub.df <- stand_panel.df[which(stand_panel.df$topic == sub_inds[1]),]
sub_inds[1]
stand_panel.df$topic
sub.df <- stand_panel.df[which(as.character(stand_panel.df$topic) == as.character(sub_inds[1])),]
for (si in as.character(sub_inds[2:length(sub_inds)])){}
sub_inds <- sample(individuals, length(individuals), replace = TRUE)
sub.df <- stand_panel.df[which(as.character(stand_panel.df$topic) == as.character(sub_inds[1])),]
for (si in as.character(sub_inds[2:length(sub_inds)])){
sub.df <- rbind(sub.df, stand_panel.df[which(as.character(stand_panel.df$topic) == si),])
}
var_sub <- pvarfeols(
dependent_vars = c("fed_value_std", "bank_value_std", "ecb_value_std"),
lags = 3,
#exog_vars,
transformation = c("fod"),
data = sub.df,
panel_identifier = c("topic", "period")
)
sub.df
type(sub.df)
typeof(sub.df)
var_sub <- pvarfeols(
dependent_vars = c("fed_value_std", "bank_value_std", "ecb_value_std"),
lags = 3,
#exog_vars,
transformation = c("demean"),
data = data.frame(sub.df),
panel_identifier = c("topic", "period")
)
varsub_girf <- girf(var_sub, n.ahead = n_ahead, ma_approx_steps = n_ahead)
girf_draws[nn,paste0("fed_on_fed_", 1:n_ahead)] <- varsub_girf$fed_value_std[,"fed_value_std"]
girf_draws[nn,paste0("fed_on_boe_", 1:n_ahead)] <- varsub_girf$fed_value_std[,"bank_value_std"]
girf_draws[nn,paste0("fed_on_ecb_", 1:n_ahead)] <- varsub_girf$fed_value_std[,"ecb_value_std"]
girf_draws[nn,paste0("boe_on_fed_", 1:n_ahead)] <- varsub_girf$bank_value_std[,"fed_value_std"]
girf_draws[nn,paste0("boe_on_boe_", 1:n_ahead)] <- varsub_girf$bank_value_std[,"bank_value_std"]
girf_draws[nn,paste0("boe_on_ecb_", 1:n_ahead)] <- varsub_girf$bank_value_std[,"ecb_value_std"]
# Save OIRF results for fed shock
girf_draws[nn,paste0("ecb_on_fed_", 1:n_ahead)] <- varsub_girf$ecb_value_std[,"fed_value_std"]
girf_draws[nn,paste0("ecb_on_boe_", 1:n_ahead)] <- varsub_girf$ecb_value_std[,"bank_value_std"]
girf_draws[nn,paste0("ecb_on_ecb_", 1:n_ahead)] <- varsub_girf$ecb_value_std[,"ecb_value_std"]
View(girf_draws)
pb = txtProgressBar(min = 1, max = ndraws, initial = 1)
for (nn in 1:ndraws){
setTxtProgressBar(pb,nn)
# Blockwise sample individuals
sub_inds <- sample(individuals, length(individuals), replace = TRUE)
sub.df <- stand_panel.df[which(as.character(stand_panel.df$topic) == as.character(sub_inds[1])),]
for (si in as.character(sub_inds[2:length(sub_inds)])){
sub.df <- rbind(sub.df, stand_panel.df[which(as.character(stand_panel.df$topic) == si),])
}
typeof(sub.df)
# Estimate VAR by OLS
var_sub <- pvarfeols(
dependent_vars = c("fed_value_std", "bank_value_std", "ecb_value_std"),
lags = 3,
#exog_vars,
transformation = c("demean"),
data = data.frame(sub.df),
panel_identifier = c("topic", "period")
)
# Compute IRFs
varsub_girf <- girf(var_sub, n.ahead = n_ahead, ma_approx_steps = n_ahead)
# Save GIRF results for disp shock
girf_draws[nn,paste0("fed_on_fed_", 1:n_ahead)] <- varsub_girf$fed_value_std[,"fed_value_std"]
girf_draws[nn,paste0("fed_on_boe_", 1:n_ahead)] <- varsub_girf$fed_value_std[,"bank_value_std"]
girf_draws[nn,paste0("fed_on_ecb_", 1:n_ahead)] <- varsub_girf$fed_value_std[,"ecb_value_std"]
# Save OIRF results for news shock
girf_draws[nn,paste0("boe_on_fed_", 1:n_ahead)] <- varsub_girf$bank_value_std[,"fed_value_std"]
girf_draws[nn,paste0("boe_on_boe_", 1:n_ahead)] <- varsub_girf$bank_value_std[,"bank_value_std"]
girf_draws[nn,paste0("boe_on_ecb_", 1:n_ahead)] <- varsub_girf$bank_value_std[,"ecb_value_std"]
# Save OIRF results for fed shock
girf_draws[nn,paste0("ecb_on_fed_", 1:n_ahead)] <- varsub_girf$ecb_value_std[,"fed_value_std"]
girf_draws[nn,paste0("ecb_on_boe_", 1:n_ahead)] <- varsub_girf$ecb_value_std[,"bank_value_std"]
girf_draws[nn,paste0("ecb_on_ecb_", 1:n_ahead)] <- varsub_girf$ecb_value_std[,"ecb_value_std"]
}
setwd("~/Documents/GitHub/CBC_spillovers")
rm(list=ls())
require(tm)
require(stringr)
require(tidytext)
require(tidyr)
require(slam)
require(topicmodels)
require(ggplot2)
require(dplyr)
require(wordcloud)
require(lfe)
require(plm)
require(lubridate)
require(stargazer)
require(panelvar)
### Define the directories where raw data is stored and clean will be saved
clean_dir <- "~/Documents/DPhil/Clean_Data/"
raw_dir <- "~/Documents/DPhil/Raw_Data/"
export_dir <- "~/Documents/DPhil/central_bank_communication/figures/"
### Import the topic attention data
meeting.df <- read.csv(paste0(clean_dir, "CBC/meetingtopicprops.csv"), encoding = "utf-8", stringsAsFactors = FALSE)
meeting.df$pub_date <- as.Date(meeting.df$pub_date)
meeting.df$meet_date <- as.Date(meeting.df$meet_date)
### Identify potentially influential meetings
plus <- difftime(meeting.df$pub_date[1], meeting.df$meet_date[1], units = "days")
minus <- difftime(meeting.df$meet_date[1], meeting.df$pub_date[1], units = "days")
meeting.df$difftime <- as.numeric(difftime(meeting.df$pub_date, meeting.df$meet_date, units = "days"))
# Plot the time difference between publication and meeting date across the sample
ggplot() +
scale_color_manual("",
values = c("BoE minutes" = "black", "Fed minutes" = "blue3", "ECB statements" = "darkgoldenrod2")) +
geom_line(data = meeting.df[which(meeting.df$central_bank == "Bank of England"),],
aes(x = meet_date, y = difftime, color = "BoE minutes")) +
geom_line(data = meeting.df[which(meeting.df$central_bank == "Federal Reserve"),],
aes(x = meet_date, y = difftime, color = "Fed minutes")) +
geom_line(data = meeting.df[which(meeting.df$central_bank == "European Central Bank"),],
aes(x= meet_date, y = difftime, color = "ECB statements")) +
xlab("Meeting date") +
ylab("Days between meeting and publication date")
ggplot() +
scale_color_manual("",
values = c("BoE minutes" = "black", "Fed minutes" = "blue3", "ECB statements" = "darkgoldenrod2")) +
geom_line(data = meeting.df[which(meeting.df$central_bank == "Bank of England"),],
aes(x = meet_date, y = difftime, color = "BoE minutes")) +
geom_line(data = meeting.df[which(meeting.df$central_bank == "Federal Reserve"),],
aes(x = meet_date, y = difftime, color = "Fed minutes")) +
geom_line(data = meeting.df[which(meeting.df$central_bank == "European Central Bank"),],
aes(x= meet_date, y = difftime, color = "ECB statements")) +
xlab("Meeting date") + theme_bw() +
ylab("Days between meeting and publication date")
ggsave(paste0(export_dir, "meeting_pub_date.png"), width = 8, height = 4)
export_dir
ggsave(paste0(export_dir, "meeting_pub_date.png"), width = 8, height = 3)
varobj <- varone_girf
btstrpobj <- girf_draws
name <- "fed_on_fed_"
create_btsrp_df <- function(n_ahead,btstrpobj,name){
btstrp_df <- data.frame(period = 0:(n_ahead-1))
btstrp_df[,c("quant_0p025", "quant_0p975", "quant_0p5", "quant_0p15", "quant_0p85")] <- 0
for (ll in 1:n_ahead){
btstrp_dist <- btstrpobj[,paste0(name, ll)]
btstrp_df$quant_0p025[ll] <- quantile(btstrp_dist, probs = c(0.025))
btstrp_df$quant_0p975[ll] <- quantile(btstrp_dist, probs = c(0.975))
btstrp_df$quant_0p15[ll] <- quantile(btstrp_dist, probs = c(0.15))
btstrp_df$quant_0p85[ll] <- quantile(btstrp_dist, probs = c(0.85))
btstrp_df$quant_0p5[ll] <- quantile(btstrp_dist, probs = c(0.5))
}
return(btstrp_df)
}
plt_btstrp <- function(btstrp_df){
p1 <- ggplot(btstrp_df,aes(x=period)) + geom_line(aes(y=quant_0p5)) + theme_bw() +
xlab("Periods") + ylab("Response") + geom_hline(yintercept = 0, linetype = 2) +
geom_ribbon(aes(ymin = quant_0p025, ymax = quant_0p975), fill= "black", alpha = 0.2) +
geom_ribbon(aes(ymin = quant_0p15, ymax = quant_0p85), fill = "black", alpha = 0.4) +
scale_x_continuous(breaks= pretty_breaks())
return(p1)
}
btstrp_df <- create_btsrp_df(n_ahead,girf_draws,"fed_on_fed_")
n_ahead <- 12
btstrp_df <- create_btsrp_df(n_ahead,girf_draws,"fed_on_fed_")
girf_draws
setwd("~/Documents/GitHub/CBC_spillovers")
rm(list=ls())
require(tm)
require(stringr)
require(tidytext)
require(tidyr)
require(slam)
require(topicmodels)
require(ggplot2)
require(dplyr)
require(wordcloud)
require(lfe)
require(plm)
require(lubridate)
require(stargazer)
require(panelvar)
### Define the directories where raw data is stored and clean will be saved
clean_dir <- "~/Documents/DPhil/Clean_Data/"
raw_dir <- "~/Documents/DPhil/Raw_Data/"
export_dir <- "~/Documents/DPhil/central_bank_communication/figures/"
### Import the topic attention data
meeting.df <- read.csv(paste0(clean_dir, "CBC/meetingtopicprops.csv"), encoding = "utf-8", stringsAsFactors = FALSE)
meeting.df$pub_date <- as.Date(meeting.df$pub_date)
meeting.df$meet_date <- as.Date(meeting.df$meet_date)
### Identify potentially influential meetings
plus <- difftime(meeting.df$pub_date[1], meeting.df$meet_date[1], units = "days")
minus <- difftime(meeting.df$meet_date[1], meeting.df$pub_date[1], units = "days")
meeting.df$difftime <- as.numeric(difftime(meeting.df$pub_date, meeting.df$meet_date, units = "days"))
# Plot the time difference between publication and meeting date across the sample
ggplot() +
scale_color_manual("",
values = c("BoE minutes" = "black", "Fed minutes" = "blue3", "ECB statements" = "darkgoldenrod2")) +
geom_line(data = meeting.df[which(meeting.df$central_bank == "Bank of England"),],
aes(x = meet_date, y = difftime, color = "BoE minutes")) +
geom_line(data = meeting.df[which(meeting.df$central_bank == "Federal Reserve"),],
aes(x = meet_date, y = difftime, color = "Fed minutes")) +
geom_line(data = meeting.df[which(meeting.df$central_bank == "European Central Bank"),],
aes(x= meet_date, y = difftime, color = "ECB statements")) +
xlab("Meeting date") + theme_bw() +
ylab("Days between meeting and publication date")
#ggtitle("GDP growth")
ggsave(paste0(export_dir, "meeting_pub_date.png"), width = 8, height = 3)
### Get a table of avergae topic proportions
var_used <- "T"
k <- 30
variablenames <- paste0(var_used, 1:k)
meeting.df <- meeting.df[,c("meeting_id", "year", "month", "central_bank",
"pub_date", "meet_date", variablenames)]
aggregate.df <- meeting.df[,c("central_bank", variablenames)]
aggregate.df <- aggregate(aggregate.df[,variablenames], by = list(aggregate.df$central_bank), FUN = mean)
rownames(aggregate.df) <- aggregate.df[,1]
aggregate.df <- aggregate.df[,2:31]
aggregate.df <- t(as.matrix(aggregate.df))
aggregate.df <- data.frame(round(aggregate.df, 4))
aggregate.df$Top5 <- ""
aggregate.df$Description <- ""
aggregate.df$Topic <- rownames(aggregate.df)
aggregate.df <- aggregate.df[,c("Topic", "Description", "Top5",
"Bank.of.England", "European.Central.Bank", "Federal.Reserve")]
stargazer(as.matrix(aggregate.df), rownames = FALSE)
### Aggregate to quarterly
meeting.df$quarter <- floor_date(meeting.df$meet_date, unit = "quarter")
meeting.df$month <- floor_date(meeting.df$meet_date, unit = "month")
meeting.df <- meeting.df[,c("meeting_id", "year", "quarter", "month", "central_bank",
"pub_date", "meet_date", variablenames)]
quarterly.df <- aggregate(meeting.df[,c(variablenames)], list(meeting.df$quarter, meeting.df$central_bank), mean)
quarterly.df$quarter <- quarterly.df$Group.1
quarterly.df$central_bank <- quarterly.df$Group.2
quarterly.df <- quarterly.df[,c("central_bank", "quarter", variablenames)]
# convert to long from for topic-meeting combinations
command <- paste0("quarterly_panel <- gather(quarterly.df, topic, var_value, ", var_used, "1:",
var_used, k, ", factor_key=TRUE)")
eval(parse(text=command))
fed_panel <- quarterly_panel[which(quarterly_panel$central_bank == "Federal Reserve"),]
fed_panel$fed_value <- fed_panel$var_value
fed_panel <- select(fed_panel, topic, quarter, fed_value)
bank_panel <- quarterly_panel[which(quarterly_panel$central_bank == "Bank of England"),]
bank_panel$bank_value <- bank_panel$var_value
bank_panel <- select(bank_panel, topic, quarter, bank_value)
ecb_panel <- quarterly_panel[which(quarterly_panel$central_bank == "European Central Bank"),]
ecb_panel$ecb_value <- ecb_panel$var_value
ecb_panel <- select(ecb_panel, topic, quarter, ecb_value)
quarterly_panel <- merge(fed_panel, bank_panel, by = c("topic", "quarter"))
quarterly_panel <- merge(quarterly_panel, ecb_panel, by = c("topic", "quarter"))
quarterly_panel$period <- as.integer(as.factor(quarterly_panel$quarter))
quarterly_panel <- pdata.frame(data.frame(quarterly_panel), index = c("topic", "period"))
quarterly_panel$quarter <- as.Date(quarterly_panel$quarter)
### Standardise the variables
colnames(quarterly_panel)
aggregate.panel <- quarterly_panel[,c("topic", "fed_value", "bank_value", "ecb_value")]
colnames(aggregate.panel)
aggregate.panel <- aggregate.panel %>%
group_by(topic) %>%
summarise_all(funs(mean, sd), na.rm = TRUE)
stand_panel.df <- merge(quarterly_panel, aggregate.panel, by = "topic")
stand_panel.df$fed_value_std <- (stand_panel.df$fed_value -
stand_panel.df$fed_value_mean)/stand_panel.df$fed_value_sd
stand_panel.df$bank_value_std <- (stand_panel.df$bank_value -
stand_panel.df$bank_value_mean)/stand_panel.df$bank_value_sd
stand_panel.df$ecb_value_std <- (stand_panel.df$ecb_value -
stand_panel.df$ecb_value_mean)/stand_panel.df$ecb_value_sd
stand_panel.df <- pdata.frame(data.frame(stand_panel.df), index = c("topic", "period"))
model <- felm(fed_value ~ plm::lag(fed_value, 1) + plm::lag(bank_value, 1) + plm::lag(ecb_value, 1)| topic, data = quarterly_panel)
summary(model)
model_std <- felm(fed_value_std ~ plm::lag(fed_value_std, 1) + plm::lag(bank_value_std, 1) + plm::lag(ecb_value_std, 1)| topic, data = stand_panel.df)
summary(model_std)
model <- felm(bank_value ~  plm::lag(fed_value, 1) + plm::lag(bank_value, 1) + plm::lag(ecb_value, 1)| topic, data = quarterly_panel)
summary(model)
model_std <- felm(bank_value_std ~  plm::lag(fed_value_std, 1) + plm::lag(bank_value_std, 1) + plm::lag(ecb_value_std, 1)| topic, data = stand_panel.df)
summary(model_std)
model <- felm(ecb_value ~  plm::lag(fed_value, 1) + plm::lag(bank_value, 1) + plm::lag(ecb_value, 1)| topic, data = quarterly_panel)
summary(model)
model_std <- felm(ecb_value_std ~  plm::lag(fed_value_std, 1) + plm::lag(bank_value_std, 1) + plm::lag(ecb_value_std, 1)| topic, data = stand_panel.df)
summary(model_std)
model <- felm(ecb_value ~  plm::lag(fed_value, 1:3) + plm::lag(bank_value, 1:3) + plm::lag(ecb_value, 1:3)| topic, data = quarterly_panel)
summary(model)
model_std <- felm(ecb_value_std ~  plm::lag(fed_value_std, 1:3) + plm::lag(bank_value_std, 1:3) + plm::lag(ecb_value_std, 1:3)| topic, data = stand_panel.df)
summary(model_std)
pvar_model1 <-
pvarfeols(dependent_vars = c("fed_value", "bank_value", "ecb_value"),
lags = 1,
transformation = "demean",
data = data.frame(quarterly_panel),
panel_identifier= c("topic", "period"))
summary(pvar_model1)
pvar_model1_std <-
pvarfeols(dependent_vars = c("fed_value_std", "bank_value_std", "ecb_value_std"),
lags = 1,
transformation = "demean",
data = data.frame(stand_panel.df),
panel_identifier= c("topic", "period"))
summary(pvar_model1_std)
varone_girf <- girf(pvar_model1_std, n.ahead = 12, ma_approx_steps = 12)
plot(varone_girf)
pvar_model3 <-
pvarfeols(dependent_vars = c("fed_value", "bank_value", "ecb_value"),
lags = 3,
transformation = "demean",
data = data.frame(quarterly_panel),
panel_identifier= c("topic", "period"))
summary(pvar_model3)
pvar_model3_std <-
pvarfeols(dependent_vars = c("fed_value_std", "bank_value_std", "ecb_value_std"),
lags = 3,
transformation = "demean",
data = data.frame(stand_panel.df),
panel_identifier= c("topic", "period"))
summary(pvar_model3_std)
stab_pvar_model <- stability(pvar_model3_std)
print(stab_pvar_model)
plot(stab_pvar_model)
individuals <- unique(stand_panel.df$topic)
ndraws <- 5000
n_ahead <- 12
## Store results
girf_draws <- data.frame(draw = 1:ndraws)
# Dispersion shock
girf_draws[,c(paste0("fed_on_fed_", 1:n_ahead),paste0("fed_on_boe_", 1:n_ahead),
paste0("fed_on_ecb_", 1:n_ahead))] <- 0
# News shock
girf_draws[,c(paste0("boe_on_fed_", 1:n_ahead),paste0("boe_on_boe_", 1:n_ahead),
paste0("boe_on_ecb_", 1:n_ahead))] <- 0
# FOMC shock
girf_draws[,c(paste0("ecb_on_fed_", 1:n_ahead),paste0("ebc_on_boe_", 1:n_ahead),
paste0("ecb_on_ecb_", 1:n_ahead))] <- 0
pb = txtProgressBar(min = 1, max = ndraws, initial = 1)
for (nn in 1:ndraws){
setTxtProgressBar(pb,nn)
# Blockwise sample individuals
sub_inds <- sample(individuals, length(individuals), replace = TRUE)
sub.df <- stand_panel.df[which(as.character(stand_panel.df$topic) == as.character(sub_inds[1])),]
for (si in as.character(sub_inds[2:length(sub_inds)])){
sub.df <- rbind(sub.df, stand_panel.df[which(as.character(stand_panel.df$topic) == si),])
}
typeof(sub.df)
# Estimate VAR by OLS
var_sub <- pvarfeols(
dependent_vars = c("fed_value_std", "bank_value_std", "ecb_value_std"),
lags = 3,
#exog_vars,
transformation = c("demean"),
data = data.frame(sub.df),
panel_identifier = c("topic", "period")
)
# Compute IRFs
varsub_girf <- girf(var_sub, n.ahead = n_ahead, ma_approx_steps = n_ahead)
# Save GIRF results for disp shock
girf_draws[nn,paste0("fed_on_fed_", 1:n_ahead)] <- varsub_girf$fed_value_std[,"fed_value_std"]
girf_draws[nn,paste0("fed_on_boe_", 1:n_ahead)] <- varsub_girf$fed_value_std[,"bank_value_std"]
girf_draws[nn,paste0("fed_on_ecb_", 1:n_ahead)] <- varsub_girf$fed_value_std[,"ecb_value_std"]
# Save OIRF results for news shock
girf_draws[nn,paste0("boe_on_fed_", 1:n_ahead)] <- varsub_girf$bank_value_std[,"fed_value_std"]
girf_draws[nn,paste0("boe_on_boe_", 1:n_ahead)] <- varsub_girf$bank_value_std[,"bank_value_std"]
girf_draws[nn,paste0("boe_on_ecb_", 1:n_ahead)] <- varsub_girf$bank_value_std[,"ecb_value_std"]
# Save OIRF results for fed shock
girf_draws[nn,paste0("ecb_on_fed_", 1:n_ahead)] <- varsub_girf$ecb_value_std[,"fed_value_std"]
girf_draws[nn,paste0("ecb_on_boe_", 1:n_ahead)] <- varsub_girf$ecb_value_std[,"bank_value_std"]
girf_draws[nn,paste0("ecb_on_ecb_", 1:n_ahead)] <- varsub_girf$ecb_value_std[,"ecb_value_std"]
}
### Plot IRFs with bootstrapped CIs
varobj <- varone_girf
btstrpobj <- girf_draws
name <- "fed_on_fed_"
create_btsrp_df <- function(n_ahead,btstrpobj,name){
btstrp_df <- data.frame(period = 0:(n_ahead-1))
btstrp_df[,c("quant_0p025", "quant_0p975", "quant_0p5", "quant_0p15", "quant_0p85")] <- 0
for (ll in 1:n_ahead){
btstrp_dist <- btstrpobj[,paste0(name, ll)]
btstrp_df$quant_0p025[ll] <- quantile(btstrp_dist, probs = c(0.025))
btstrp_df$quant_0p975[ll] <- quantile(btstrp_dist, probs = c(0.975))
btstrp_df$quant_0p15[ll] <- quantile(btstrp_dist, probs = c(0.15))
btstrp_df$quant_0p85[ll] <- quantile(btstrp_dist, probs = c(0.85))
btstrp_df$quant_0p5[ll] <- quantile(btstrp_dist, probs = c(0.5))
}
return(btstrp_df)
}
plt_btstrp <- function(btstrp_df){
p1 <- ggplot(btstrp_df,aes(x=period)) + geom_line(aes(y=quant_0p5)) + theme_bw() +
xlab("Periods") + ylab("Response") + geom_hline(yintercept = 0, linetype = 2) +
geom_ribbon(aes(ymin = quant_0p025, ymax = quant_0p975), fill= "black", alpha = 0.2) +
geom_ribbon(aes(ymin = quant_0p15, ymax = quant_0p85), fill = "black", alpha = 0.4) +
scale_x_continuous(breaks= pretty_breaks())
return(p1)
}
btstrp_df <- create_btsrp_df(n_ahead,girf_draws,"fed_on_fed_")
plt_btstrp(btstrp_df) + ggtitle("FOMC focus on FOMC focus")
ggsave("empirical/figures/CB_GIRFs/fed_fed.pdf", width = 4, height = 3)
btstrp_df <- create_btsrp_df(n_ahead,girf_draws,"fed_on_boe_")
plt_btstrp(btstrp_df) + ggtitle("FOMC focus on MPC focus")
ggsave("empirical/figures/CB_GIRFs/fed_boe.pdf", width = 4, height = 3)
btstrp_df <- create_btsrp_df(n_ahead,girf_draws,"fed_on_ecb_")
plt_btstrp(btstrp_df) + ggtitle("FOMC focus on GC focus")
btstrp_df <- create_btsrp_df(n_ahead,girf_draws,"boe_on_fed_")
plt_btstrp(btstrp_df) + ggtitle("MPC focus on FOMC focus")
ggsave("empirical/figures/CB_GIRFs/boe_fed.pdf", width = 4, height = 3)
btstrp_df <- create_btsrp_df(n_ahead,girf_draws,"fed_on_ecb_")
plt_btstrp(btstrp_df) + ggtitle("FOMC focus on GC focus")
ggsave("empirical/figures/CB_GIRFs/fed_ecb.pdf", width = 4, height = 3)
btstrp_df <- create_btsrp_df(n_ahead,girf_draws,"boe_on_fed_")
plt_btstrp(btstrp_df) + ggtitle("MPC focus on FOMC focus")
btstrp_df <- create_btsrp_df(n_ahead,girf_draws,"ecb_on_fed_")
plt_btstrp(btstrp_df) + ggtitle("GC focus on FOMC focus")
ggsave("empirical/figures/CB_GIRFs/ecb_fed.pdf", width = 4, height = 3)
btstrp_df <- create_btsrp_df(n_ahead,girf_draws,"ecb_on_boe_")
plt_btstrp(btstrp_df) + ggtitle("GC focus on MPC focus")
ggsave("empirical/figures/CB_GIRFs/ecb_boe.pdf", width = 4, height = 3)
btstrp_df <- create_btsrp_df(n_ahead,girf_draws,"ecb_on_ecb_")
plt_btstrp(btstrp_df) + ggtitle("GC focus on GC focus")
ggsave("empirical/figures/CB_GIRFs/ecb_ecb.pdf", width = 4, height = 3)
btstrp_df <- create_btsrp_df(n_ahead,girf_draws,"boe_on_ecb_")
plt_btstrp(btstrp_df) + ggtitle("MPC focus on GC focus")
btstrp_df <- create_btsrp_df(n_ahead,girf_draws,"boe_on_fed_")
plt_btstrp(btstrp_df) + ggtitle("MPC focus on FOMC focus")
btstrp_df <- create_btsrp_df(n_ahead,girf_draws,"fed_on_boe_")
plt_btstrp(btstrp_df) + ggtitle("FOMC focus on MPC focus")
individuals <- unique(stand_panel.df$topic)
ndraws <- 5000
n_ahead <- 24
## Store results
girf_draws <- data.frame(draw = 1:ndraws)
# Dispersion shock
girf_draws[,c(paste0("fed_on_fed_", 1:n_ahead),paste0("fed_on_boe_", 1:n_ahead),
paste0("fed_on_ecb_", 1:n_ahead))] <- 0
# News shock
girf_draws[,c(paste0("boe_on_fed_", 1:n_ahead),paste0("boe_on_boe_", 1:n_ahead),
paste0("boe_on_ecb_", 1:n_ahead))] <- 0
# FOMC shock
girf_draws[,c(paste0("ecb_on_fed_", 1:n_ahead),paste0("ebc_on_boe_", 1:n_ahead),
paste0("ecb_on_ecb_", 1:n_ahead))] <- 0
pb = txtProgressBar(min = 1, max = ndraws, initial = 1)
for (nn in 1:ndraws){
setTxtProgressBar(pb,nn)
# Blockwise sample individuals
sub_inds <- sample(individuals, length(individuals), replace = TRUE)
sub.df <- stand_panel.df[which(as.character(stand_panel.df$topic) == as.character(sub_inds[1])),]
for (si in as.character(sub_inds[2:length(sub_inds)])){
sub.df <- rbind(sub.df, stand_panel.df[which(as.character(stand_panel.df$topic) == si),])
}
typeof(sub.df)
# Estimate VAR by OLS
var_sub <- pvarfeols(
dependent_vars = c("fed_value_std", "bank_value_std", "ecb_value_std"),
lags = 3,
#exog_vars,
transformation = c("demean"),
data = data.frame(sub.df),
panel_identifier = c("topic", "period")
)
# Compute IRFs
varsub_girf <- girf(var_sub, n.ahead = n_ahead, ma_approx_steps = n_ahead)
# Save GIRF results for disp shock
girf_draws[nn,paste0("fed_on_fed_", 1:n_ahead)] <- varsub_girf$fed_value_std[,"fed_value_std"]
girf_draws[nn,paste0("fed_on_boe_", 1:n_ahead)] <- varsub_girf$fed_value_std[,"bank_value_std"]
girf_draws[nn,paste0("fed_on_ecb_", 1:n_ahead)] <- varsub_girf$fed_value_std[,"ecb_value_std"]
# Save OIRF results for news shock
girf_draws[nn,paste0("boe_on_fed_", 1:n_ahead)] <- varsub_girf$bank_value_std[,"fed_value_std"]
girf_draws[nn,paste0("boe_on_boe_", 1:n_ahead)] <- varsub_girf$bank_value_std[,"bank_value_std"]
girf_draws[nn,paste0("boe_on_ecb_", 1:n_ahead)] <- varsub_girf$bank_value_std[,"ecb_value_std"]
# Save OIRF results for fed shock
girf_draws[nn,paste0("ecb_on_fed_", 1:n_ahead)] <- varsub_girf$ecb_value_std[,"fed_value_std"]
girf_draws[nn,paste0("ecb_on_boe_", 1:n_ahead)] <- varsub_girf$ecb_value_std[,"bank_value_std"]
girf_draws[nn,paste0("ecb_on_ecb_", 1:n_ahead)] <- varsub_girf$ecb_value_std[,"ecb_value_std"]
}
### Plot IRFs with bootstrapped CIs
varobj <- varone_girf
btstrpobj <- girf_draws
name <- "fed_on_fed_"
create_btsrp_df <- function(n_ahead,btstrpobj,name){
btstrp_df <- data.frame(period = 0:(n_ahead-1))
btstrp_df[,c("quant_0p025", "quant_0p975", "quant_0p5", "quant_0p15", "quant_0p85")] <- 0
for (ll in 1:n_ahead){
btstrp_dist <- btstrpobj[,paste0(name, ll)]
btstrp_df$quant_0p025[ll] <- quantile(btstrp_dist, probs = c(0.025))
btstrp_df$quant_0p975[ll] <- quantile(btstrp_dist, probs = c(0.975))
btstrp_df$quant_0p15[ll] <- quantile(btstrp_dist, probs = c(0.15))
btstrp_df$quant_0p85[ll] <- quantile(btstrp_dist, probs = c(0.85))
btstrp_df$quant_0p5[ll] <- quantile(btstrp_dist, probs = c(0.5))
}
return(btstrp_df)
}
plt_btstrp <- function(btstrp_df){
p1 <- ggplot(btstrp_df,aes(x=period)) + geom_line(aes(y=quant_0p5)) + theme_bw() +
xlab("Periods") + ylab("Response") + geom_hline(yintercept = 0, linetype = 2) +
geom_ribbon(aes(ymin = quant_0p025, ymax = quant_0p975), fill= "black", alpha = 0.2) +
geom_ribbon(aes(ymin = quant_0p15, ymax = quant_0p85), fill = "black", alpha = 0.4) +
scale_x_continuous(breaks= pretty_breaks())
return(p1)
}
btstrp_df <- create_btsrp_df(n_ahead,girf_draws,"fed_on_fed_")
plt_btstrp(btstrp_df) + ggtitle("FOMC focus on FOMC focus")
ggsave("empirical/figures/CB_GIRFs/fed_fed.pdf", width = 4, height = 3)
btstrp_df <- create_btsrp_df(n_ahead,girf_draws,"fed_on_boe_")
plt_btstrp(btstrp_df) + ggtitle("FOMC focus on MPC focus")
ggsave("empirical/figures/CB_GIRFs/fed_boe.pdf", width = 4, height = 3)
btstrp_df <- create_btsrp_df(n_ahead,girf_draws,"fed_on_ecb_")
plt_btstrp(btstrp_df) + ggtitle("FOMC focus on GC focus")
ggsave("empirical/figures/CB_GIRFs/fed_ecb.pdf", width = 4, height = 3)
btstrp_df <- create_btsrp_df(n_ahead,girf_draws,"boe_on_fed_")
plt_btstrp(btstrp_df) + ggtitle("MPC focus on FOMC focus")
ggsave("empirical/figures/CB_GIRFs/boe_fed.pdf", width = 4, height = 3)
btstrp_df <- create_btsrp_df(n_ahead,girf_draws,"boe_on_boe_")
plt_btstrp(btstrp_df) + ggtitle("MPC focus on MPC focus")
ggsave("empirical/figures/CB_GIRFs/boe_boe.pdf", width = 4, height = 3)
btstrp_df <- create_btsrp_df(n_ahead,girf_draws,"boe_on_ecb_")
plt_btstrp(btstrp_df) + ggtitle("MPC focus on GC focus")
ggsave("empirical/figures/CB_GIRFs/boe_ecb.pdf", width = 4, height = 3)
btstrp_df <- create_btsrp_df(n_ahead,girf_draws,"ecb_on_fed_")
plt_btstrp(btstrp_df) + ggtitle("GC focus on FOMC focus")
ggsave("empirical/figures/CB_GIRFs/ecb_fed.pdf", width = 4, height = 3)
btstrp_df <- create_btsrp_df(n_ahead,girf_draws,"ecb_on_boe_")
plt_btstrp(btstrp_df) + ggtitle("GC focus on MPC focus")
ggsave("empirical/figures/CB_GIRFs/ecb_boe.pdf", width = 4, height = 3)
btstrp_df <- create_btsrp_df(n_ahead,girf_draws,"ecb_on_ecb_")
plt_btstrp(btstrp_df) + ggtitle("GC focus on GC focus")
ggsave("empirical/figures/CB_GIRFs/ecb_ecb.pdf", width = 4, height = 3)
